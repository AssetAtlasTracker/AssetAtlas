/* 
Large component styles
e.g. containers, theming, etc.
*/

#home-component{
  margin: 1rem 2vw;
  padding: 2rem 2% 1rem 2vw;
}

.top-bar{
  border-radius: 0 0 10px 10px !important;
  padding: 0 !important;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 10;
  height: auto; /* Allow height to adjust based on content */
}

.top-bar-flex{
  display: flex;
  align-items: center;
  padding: 0 1rem; /* Add padding for spacing */
}

.flex-1 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: 0.5rem;
}

.glass{
  background: rgba(var(--color-primary-800) / 0.8) !important;
  box-shadow: 0 8px 16px 0 rgb(var(--color-primary-900));
  backdrop-filter: blur( 14px );
  -webkit-backdrop-filter: blur( 14px );
  border-radius: 10px;
}

.page-component {
  margin: 2rem 2vw;
  padding: 1rem 2vw;
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
  border-radius: 10px;
}
  
.internal-component { /* For components inset within other components*/
  margin: 1rem 0;
  padding: 1rem;
  background-color: rgba(var(--color-primary-900) / 0.1);
  box-shadow: inset 5px 5px 8px -8px rgb(var(--color-primary-900));
}

.dialog-component {
  margin: 1rem;
  padding: 1rem;
  background: rgb(var(--color-primary-100));
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
}

.large-dialog-noscroll{ /* Keeps add/edit dialog from scrolling */
  height: calc(100% - 1rem);
  overflow: hidden;
}

.large-dialog-internal{ /* Allows scrolling on internal portion of add/edit */
  height: calc(100% - 5rem);
  overflow-y: scroll;
}

.slide-out-menu {
  position: fixed;
  z-index: 5;
  top: var(--top-bar-height, 64px); /* were using the CSS variable with a harcoded fallback for height*/
  left: -100%;
  height: calc(100vh - var(--top-bar-height, 64px));
  transition: left 0.3s ease-in-out;
  background: rgb(var(--color-primary-100));
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
  margin: 0;
  padding: 1rem;
  display: flex;
  justify-content: flex-start;
  overflow-y: auto; /* Allow scrolling within the menu */
  overscroll-behavior: contain; /* Prevent scroll chaining */
}

.utility-body {
  display: flex;
  flex-direction: column;
  width: fit-content;
}

.utility-body > * {
  margin: 3em;
}

.utility-col {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  justify-items: left;
}

.utility-col > * + * {
  margin: 0.3em 0pt
}

.open{
  left: 0;
}

.image-upload-container {
  background: rgba(var(--color-primary-900), 0.8);
  border: 1px solid rgba(var(--color-primary-100), 0.8);
  border-radius: 10px;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.item-card {
  box-sizing: border-box;
  width: 95%;
  margin: 0 auto;
  padding: 20px;
  background-color: rgba(var(--color-primary-800) / 0.8);
  box-shadow: 0 8px 32px 0 rgba(var(--color-primary-900) 0.4);
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
  border-radius: 10px;
  transition: 0.4s ease; /* Expand & shrink */
  display:flex;
  justify-content:space-between;
  overflow:hidden;
  position:relative;
}

.item-card::before{ /* Hidden gradient that slides in on hover*/
  content: '';
  position: absolute;
  width: 200%;
  height: 100%;
  left: -200%;
  top: 0px;
  background: 
    linear-gradient(90deg,
                    rgba(var(--color-success-800) / 0.8),
                    rgba(var(--color-primary-800) / 0.8));
  transition: 0.7s ease; /* Gradient slide in & out*/
  z-index: -1; /* Behind item card text */
}

.item-card:hover::before { /* Initial position of gradient */
  left: -110%;
}

.item-card:hover{
  transform:scale(1.05);
}

.template-card {
  box-sizing: border-box;
  width: 95%;
  margin: 0.5rem auto;
  padding: 10px;
  background-color: rgba(var(--color-primary-800) / 0.8);
  box-shadow: 0 8px 32px 0 rgba(var(--color-primary-900) 0.4);
  border-radius: 10px;
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
}

.tree-container {
  padding: 0.5rem;
}

.tree-item {
  display: flex;
  align-items: center;
  padding: 0.25rem;
}

.sort-flex{
  display:flex;
  justify-content: flex-start;
  align-items: center;
  gap: 1rem;
  padding: 0 3vw;  /* Remove the top padding since we're using page-with-topbar */
}

.button-row-flex{
  display:flex;
  justify-content: flex-start;
  align-items: center;
  gap: 1rem;
}

.field-container {
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
  gap: 0.5rem;
  width: 100%;
  height: 3.65rem;
  background-color: rgb(var(--color-primary-900) / .6);
  border-color: rgba(0 0 0 / .0);
  border-radius: 10px;
}

.view-layout {
  position: relative;
  width: 100%;
  height: calc(100vh - 60px);
}

/* Draggable window containers */
.floating-container {
  position: absolute;
  width: fit-content;    /* Let the container size to its content */
  min-width: 300px;      /* Minimum width to prevent too narrow containers */
  max-width: 800px;      /* Maximum width to prevent excessive stretching */
  z-index: 1;
  overflow: visible;     /* Allow content to determine size */
  border-radius: 10px;
}

.window-bar {
  margin: -1rem -2vw 0;
  height: 2rem;
  background-color: rgb(var(--color-primary-900) / .8);
  cursor: move;
  border-radius: 10px 10px 0 0;
}

.window-content {
  padding: 1rem;
  width: max-content;
  min-width: 100%;
  user-select: text; 
}

.button-row-flex {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 1rem;
  width: max-content;
}

.simple-dialog-spacing{
  padding: 3rem 3rem 1rem;
}

.self-center{
  justify-self: center;
}

.scrollable-content {
  overflow-y: auto;
}

.flex-right{
  display:flex;
  justify-content:flex-end;
}

/*
Keyframe Animations 
*/

/* 
Small component styles 
e.g. buttons, lists, textareas, etc.
*/

#resize-none-textarea{
  resize: none
}

.border{
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
}

.round{
  border-radius: 10px;
}

.border-button{
  border-radius: 10px;
  border: 1px solid rgba(var(--color-primary-100) /.8);
  padding: 0.5rem 1rem;
  background: rgba(var(--color-primary-900)/.0);
  color: rgb(var(--theme-font-color-base));
}

.border-button:hover{
  background: rgba(var(--color-primary-900));
}

.x-button {
  float: right;
  color: rgba(var(--color-warning-500));
  text-transform: uppercase;
  font-weight: 800;
  line-height: 0.75rem;
}

.x-button:hover {
  color: rgba(var(--color-warning-900));
}

.warn-button{
  border-radius: 10px;
  border: 1px solid rgba(var(--color-error-400) /.8);
  padding: 0.5rem 1rem;
  background: rgba(var(--color-warning-700)/.1);
  color: rgb(var(--theme-font-color-base));
}

.warn-button:hover{
  background: rgb(var(--color-warning-900));
}

.success-button{
  border-radius: 10px;
  border: 1px solid rgba(var(--color-success-400));
  padding: 0.5rem 1rem;
  background: rgba(var(--color-success-600)/.1);
  color: rgb(var(--theme-font-color-base));
}

.success-button:hover{
  background: rgb(var(--color-success-900));
}

.utility-col > input {
  color: black;
}

.add-button {
  background: rgb(var(--color-surface-800)) !important;
  background-repeat: no-repeat !important;
  background-size: 100% 50rem !important;
  background-image: radial-gradient(at 0% 0%, rgba(var(--color-success-500) / .2) 0px, transparent 55%);
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 9999px;
  padding: 1rem 1.25rem 1.55rem;
  position: fixed;
  bottom: 1rem;
  right: 1rem;
}

.add-button:hover{
  background: rgb(var(--color-primary-900));
}

.home-view-buttons{
  margin: 0.5rem 0 0 0;
}

.toggle-background{
  background: rgb(var(--color-success-600));
}

.suggestions {
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  padding: 0.25rem; /* Reduced padding */
  position: absolute;
  width: 100%;
  border-radius: 10px;
  z-index: 10;
  max-height: 200px; /* Set maximum height */
  overflow-y: auto; /* Enable vertical scrolling */
  scrollbar-width: thin; /* Firefox */
  scrollbar-color: rgba(var(--color-primary-100) /.8) rgba(var(--color-primary-900)); /* Firefox */
}

/* Webkit (Chrome, Safari, Edge) scrollbar styles */
.suggestions::-webkit-scrollbar {
  width: 8px;
}

.suggestions::-webkit-scrollbar-track {
  background: rgba(var(--color-primary-900));
  border-radius: 10px;
}

.suggestions::-webkit-scrollbar-thumb {
  width: 100%;
  position: absolute;
  z-index: 10;
  background: rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
}

.suggestion-item{
  text-align: left;
  width:100%;
  padding: 0.5rem;
  display: block; /* Ensures consistent spacing */
}

.suggestion-item:hover {
  background: rgba(var(--color-primary-800));
  border-radius: 6px; /* Slight rounding on hover highlight */
}

.dark-textarea{
  background: rgba(var(--color-primary-900)/.1);
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
}

.searchbar{
  background: rgba(var(--color-primary-900)/.1);
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
}

.item-image-container {
  width: 100px;
  height: 100px;
  margin: 10px;
  cursor: pointer;
  transition: none;
  display: block;
}

.item-image-container.expanded {
  width: auto;
  height: auto;
  max-width: calc(100% - 20px);
}

select option { /* Select dropdown options */
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  padding: 0.5rem;
}

select option:hover {
  background: rgba(var(--color-primary-800));
}

.item-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 4px;
  transition: none;
}

.item-image-container.expanded .item-image {
  width: 100%;
  height: auto;
  max-width: 500px; /* Hard cap on image width */
  object-fit: contain;
}

.custom-dropdown {
  position: relative;
  display: inline-block;
}

.custom-dropdown select {
  appearance: none;
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
  padding: 0.5rem 1rem;
  width: 100%;
}

.custom-dropdown select option {
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  padding: 0.5rem;
}

.custom-dropdown select option:hover {
  background: rgba(var(--color-primary-800));
}

.custom-dropdown::after {
  content: '▼';
  position: absolute;
  top: 60%;
  right: 1rem;
  transform: translateY(-50%);
  pointer-events: none;
  color: rgba(var(--theme-font-color-base)/.8);
}

.action-container {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  z-index: 1000;
}

.action-message {
  background-color: rgba(var(--color-success-600) / 0.9);
  color: rgb(var(--theme-font-color-base));
  padding: 1rem 2rem;
  border-radius: 10px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  text-align: center;
}

.error-message {
  background-color: rgba(var(--color-error-500) / 0.9);
  color: rgb(var(--theme-font-color-base));
  padding: 1rem 2rem;
  border-radius: 10px;
}

.search-controls {
  display: flex;
  gap: 1rem;
}

.sort-container {
  min-width: 8rem;
  max-width: 50%;
}

.exact-search {
  display: flex;
  align-items: center;
  margin: 1.5rem 0 0 0;
  gap: 0.5rem;
}

.view-toggle {
  margin: 1rem;
}

.nav-margin {
  margin: 0rem 1rem;
}

.expand-button {
  margin-right: 0.5rem;
  cursor: pointer;
}

.tree-item-name {
  cursor: pointer;
}

.tree-item-name:hover {
  text-decoration: underline;
}

.no-children {
  opacity: 0.5;
}

.template {
  display: inline-block;
  width: 25%;
}

.fields {
  width: 70%;
}

.item-view ul {
  list-style-type: none;
  padding-left: 0;
}

.item-subcard{
  max-width:45%;
}

/* 
Text styles 
*/
#title{
  color: rgb(var(--theme-font-color-base));
  letter-spacing: -0.1rem;
  transition: color 0.2s ease-in-out;
}

#title:hover{
  color:rgb(var(--color-success-500));
}

#underline-header{
  border-bottom: 1px solid rgba(var(--color-primary-100) /.8);
}

.important-text{
  font-size: 1.5rem;
  font-weight: bold;
  letter-spacing: -0.05rem;
  overflow: hidden;
  text-overflow: ellipsis;
}

.sub-text{
  color: rgba(var(--theme-font-color-base)/.8);
  font-weight: lighter;
  overflow: hidden;
  text-overflow: ellipsis;
}

.clickable-text{
  color: rgb(var(--color-success-400));
  text-decoration: underline;
}

.clickable-text:hover{
  color: rgb(var(--color-success-500));
  text-decoration: underline;
}

.text-icon {
  font-size: 2.25rem;
}

.text-3xl {
  font-size: 2.5rem;
  line-height: 2rem;
}

.item-chain span {
  white-space: nowrap;
}

.item-name {
  font-size: 1.5rem;
}

.indented {
  padding-left: 2rem;
}

.capitalize {
  text-transform: capitalize;
}

div {
  color: rgb(var(--theme-font-color-base));
}

h1 {
  color: rgb(var(--theme-font-color-base));
  padding: 0rem 0rem 1rem 0rem; 
}

h2 {
  color: rgb(var(--theme-font-color-base));
}

body {
  background: rgb(var(--color-surface-800)) !important;
  background-repeat: no-repeat !important;
  background-size: 100% 50rem !important;
  background-image: radial-gradient(at 0% 0%, rgba(var(--color-success-500) / .2) 0px, transparent 55%), 
                    radial-gradient(at 98% 1%, rgba(var(--color-error-500) / .33) 0px, transparent 50%) !important;         
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  padding: 10px 20px 1px;
}

select {
  width: 100%;
}

input[type="file"] {
  background: rgba(var(--color-primary-900), 0.8); 
  color: rgb(var(--theme-font-color-base));
  padding: 1rem;
  width: 100%;
  text-align: center;
  &:empty::before {
    content: "Drop image file here or ";
  }
}

input[type="file"]::file-selector-button {
  background: white;
  color: black;
  border: 1px solid #ccc;
  border-radius: 10px;
  padding: 0.5rem 1rem;
  cursor: pointer;
  margin-right: 1rem;
}

::backdrop {
  background: rgba(var(--color-surface-900) / 0.7);
}

.page-with-topbar {
  margin-top: calc(var(--top-bar-height, 64px) + 1rem);
  width: 100%;
}

