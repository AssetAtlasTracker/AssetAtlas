/* 
Large component styles
e.g. containers, theming, etc.
*/

#home-component{
  margin: 1rem 2vw;
  padding: 2rem 2% 1rem 2vw;
}

.top-bar{
  border-radius: 0 0 10px 10px !important;
  padding: 0 !important;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 10;
  height: auto; /* Allow height to adjust based on content */
}

.top-bar-wrapper {
  width: 100%;
  position: relative;
  z-index: 9999; /*Top bar on top bruh. Don't generate more than 9998 windows */
}

.top-bar-flex{
  display: flex;
  align-items: center;
  padding: 0 1rem; /* Add padding for spacing */
}

.flex-1 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: 0.5rem;
}

.glass{
  background: rgba(var(--color-primary-800) / 0.8) !important;
  box-shadow: 0 8px 16px 0 rgb(var(--color-primary-900));
  backdrop-filter: blur( 14px );
  -webkit-backdrop-filter: blur( 14px );
  border-radius: 10px;
}

.page-component {
  margin: 2rem 2vw;
  padding: 1rem 2vw;
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
  border-radius: 10px;
}
  
.internal-component { /* For components inset within other components*/
  margin: 1rem 0;
  padding: 1rem;
  background-color: rgba(var(--color-primary-900) / 0.1);
  box-shadow: inset 5px 5px 8px -8px rgb(var(--color-primary-900));
}

.dialog-component {
  margin: 1rem;
  padding: 1rem;
  background: rgb(var(--color-primary-100));
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
}

.large-dialog-noscroll{ /* Keeps add/edit dialog from scrolling */
  height: calc(100% - 1rem);
  overflow: hidden;
}

.large-dialog-internal{ /* Allows scrolling on internal portion of add/edit */
  height: calc(100% - 5rem);
  overflow-y: scroll;
}

.slide-out-menu {
  position: fixed;
  z-index: 10000; /* On top of topbar (to avoid topbar dropshadow)*/
  top: var(--top-bar-height, 64px); /* were using the CSS variable with a harcoded fallback for height*/
  left: -100%;
  height: calc(100vh - var(--top-bar-height, 64px));
  transition: left 0.3s ease-in-out;
  background: rgb(var(--color-primary-100));
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
  margin: 0;
  padding: 1rem;
  display: flex;
  justify-content: flex-start;
  overflow-y: auto; /* Allow scrolling within the menu */
  overscroll-behavior: contain; /* Prevent scroll chaining */
}

.util-flex{
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.util-component {
  width: 50%;
}

.open{
  left: 0;
}

.image-upload-container {
  background: rgba(var(--color-primary-900), 0.8);
  border: 1px solid rgba(var(--color-primary-100), 0.8);
  border-radius: 10px;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.item-card {
  box-sizing: border-box;
  width: 95%;
  margin: 0 auto;
  padding: 20px;
  background-color: rgba(var(--color-primary-800) / 0.8);
  box-shadow: 0 8px 32px 0 rgba(var(--color-primary-900) 0.4);
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
  border-radius: 10px;
  transition: 0.4s ease; /* Expand & shrink */
  display:flex;
  justify-content:space-between;
  overflow:hidden;
  position:relative;
}

.item-card::before{ /* Hidden gradient that slides in on hover*/
  content: '';
  position: absolute;
  width: 200%;
  height: 100%;
  left: -200%;
  top: 0px;
  background: 
    linear-gradient(90deg,
                    rgba(var(--color-success-800) / 0.8),
                    rgba(var(--color-primary-800) / 0.8));
  transition: 0.7s ease; /* Gradient slide in & out*/
  z-index: -1; /* Behind item card text */
}

.item-card:hover::before { /* Initial position of gradient */
  left: -110%;
}

.item-card:hover{
  transform:scale(1.05);
}

.template-card {
  box-sizing: border-box;
  width: 95%;
  margin: 0.5rem auto;
  padding: 10px;
  background-color: rgba(var(--color-primary-800) / 0.8);
  box-shadow: 0 8px 32px 0 rgba(var(--color-primary-900) 0.4);
  border-radius: 10px;
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
}

.tree-container {
  padding: 0.25rem;
  position: relative;
}

.tree-branch {
  position: relative;
  margin: 0;
  padding-left: 0;
  padding-top: 0;
  padding-bottom: 0;
}

.tree-item {
  display: flex;
  align-items: center;
  padding: 0;
  position: relative;
  margin: 0;
  height: 1.5rem;
}

.tree-item-button {
  background: transparent;
  border: none;
  border-radius: 3px;
  padding: 0.1rem 0.4rem;
  margin: 0;
  font-size: 0.9rem;
  transition: all 0.1s ease;
  position: relative;
  cursor: pointer;
  text-decoration: none;
  color: rgb(var(--theme-font-color-base));
}

.tree-item-button:hover {
  background: rgba(var(--color-primary-800), 0.4);
}

.tree-item-button.current {
  background: rgba(var(--color-success-900), 0.2);
  font-weight: 500;
  color: rgb(var(--color-success-400));
}

.expand-button {
  background: transparent;
  border: none;
  padding: 0;
  width: 1rem;
  height: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  margin-right: 0.25rem;
  position: relative;
  font-size: 0.8rem;
  color: rgb(var(--theme-font-color-base));
}

.tree-icon {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  line-height: 1rem;
  text-align: center;
}

.placeholder-icon {
  visibility: hidden;
  width: 1rem;
}

.tree-item-button {
  background: rgba(var(--color-primary-900), 0.3);
  border: 1px solid rgba(var(--color-primary-100), 0.4);
  border-radius: 6px;
  padding: 0.2rem 0.5rem;
  margin: 0.05rem 0;
  font-size: 0.95rem;
  transition: all 0.2s ease;
  position: relative;
  cursor: pointer;
  text-decoration: underline;
  text-underline-offset: 2px;
}

.tree-item-button:hover {
  background: rgba(var(--color-primary-800), 0.5);
  transform: translateX(2px);
}

.tree-item-button.current {
  background: rgba(var(--color-success-900), 0.2);
  border-color: rgba(var(--color-success-400), 0.6);
  font-weight: 500;
  color: rgb(var(--color-success-400));
}

.expand-button {
  background: transparent;
  border: none;
  padding: 0;
  width: 1.5rem;
  height: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  margin-right: 0.25rem;
  position: relative;
}

.tree-item-name {
  display: none;
}

.no-children {
  display: none;
}

.button-row-flex { /* Standard flex setup for a row of buttons */
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 1rem;
  width: max-content;
}

.sort-flex { 
  display:flex;
  justify-content: flex-start;
  align-items: center;
  gap: 1rem;
  padding: 0 3vw;  /* Remove the top padding since we're using page-with-topbar */
}

.button-row-flex {
  display:flex;
  justify-content: flex-start;
  align-items: center;
  gap: 1rem;
}

.simple-flex {
  display: flex;
  gap: 0.5rem;
}

/* Update grid container to use equal gaps and adjust padding */
.add-field-container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  background: rgba(var(--color-primary-900)/.9);
  border: none;
  border-radius: 10px;
  padding: 0.5rem;
  margin: 0.5rem 0 0 0;
}

.view-layout {
  position: relative;
  width: 100%;
  height: calc(100vh - 60px);
}

/* Draggable window containers */
.floating-container {
  position: absolute;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  min-width: 200px;
  display: flex;
  flex-direction: column;
  padding: 0;
  margin: 0;
  will-change: transform, left, top;
  transform: translateZ(0); /* hardware acceleration */
}

.window-bar {
  width: 100%;
  height: 30px;
  background: rgba(0, 0, 0, 0.1);
  cursor: move;
  display: flex;
  align-items: center;
  flex-shrink: 0;
  padding: 0 8px;
  box-sizing: border-box;
  margin: 0;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  justify-content: space-between;
  user-select: none;
  touch-action: none;
  -webkit-user-drag: none;
  -webkit-tap-highlight-color: transparent;
}

.window-bar:hover {
  background: rgba(0, 0, 0, 0.15);
}

.window-bar:active {
  background: rgba(0, 0, 0, 0.2);
}

.window-title {
  font-size: 14px;
  font-weight: bold;
  margin-left: 8px;
  pointer-events: none; /* Prevents text selection when dragging */
}

.window-content {
  padding: 16px;
  overflow-y: auto;
  flex-grow: 1;
  width: 100%;
  box-sizing: border-box;
  cursor: default;
}

.window-controls {
  display: flex;
  align-items: center;
  margin-left: auto;
}

.window-control-button {
  background: none;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 4px;
  margin-left: 4px;
  padding: 0;
  transition: background-color 0.2s, color 0.2s;
}

.window-control-button:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.floating-container.no-select,
.floating-container.no-select * {
  user-select: none !important;
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
}

.floating-container.no-select .window-content ::selection {
  background: transparent;
}

/* New utility classes for input and dropdown coloring (from CreateItem.svelte styles) */
.input-box,
.dropdown-box {
  background: rgba(var(--color-primary-900)/.1);
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100)/.8);
  border-radius: 10px;
  padding: 0.5rem 1rem;
  box-sizing: border-box;
}

/* New utility class to force suggestion boxes below input fields */
.suggestion-box {
  position: absolute;
  top: 100%;
  left: 0;
  width: calc(100% - 2px); /* match input width accounting for border */
  border-radius: 4px;
  z-index: 10;
}

.page-with-topbar {
  margin-top: calc(var(--top-bar-height, 64px) + 1rem);
  width: 100%;
}

.simple-dialog-spacing{
  padding: 3rem 3rem 1rem;
}

.self-center{
  justify-self: center;
}

.scrollable-content {
  overflow-y: auto;
}

/* 
Small component styles 
e.g. buttons, lists, textareas, etc.
*/

#resize-none-textarea{
  resize: none
}

.border{
  border: 1px solid rgba(var(--color-primary-100) / 0.8);
}

.round{
  border-radius: 10px;
}

.border-button { /* Standard button style*/
  border-radius: 10px;
  border: 1px solid rgba(var(--color-primary-100) /.8);
  padding: 0.5rem 1rem;
  background: rgba(var(--color-primary-900)/.0);
  color: rgb(var(--theme-font-color-base));
}

.border-button:hover{
  background: rgba(var(--color-primary-900));
}

.x-button { /* "X" button to close windows/dialogs */
  float: right;
  color: rgba(var(--color-warning-500));
  text-transform: uppercase;
  font-weight: 800;
  line-height: 0.75rem;
  height: 0.75rem;
}

.x-button:hover {
  color: rgba(var(--color-warning-900));
  background-color: rgba(var(--color-warning-900) /.2);
}

.warn-button { /* For delete, cancel, etc.*/
  border-radius: 10px;
  border: 1px solid rgba(var(--color-error-400) /.8);
  padding: 0.5rem 1rem;
  background: rgba(var(--color-warning-700)/.1);
  color: rgb(var(--theme-font-color-base));
}

.warn-button:hover {
  background: rgb(var(--color-warning-900));
}

.success-button { /* For create, confirm, etc. */
  border-radius: 10px;
  border: 1px solid rgba(var(--color-success-400));
  padding: 0.5rem 1rem;
  background: rgba(var(--color-success-600)/.1);
  color: rgb(var(--theme-font-color-base));
}

.success-button:hover {
  background: rgb(var(--color-success-900));
}

.add-button {
  background: rgb(var(--color-surface-800)) !important;
  background-repeat: no-repeat !important;
  background-size: 100% 50rem !important;
  background-image: radial-gradient(at 0% 0%, rgba(var(--color-success-500) / .2) 0px, transparent 55%);
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 9999px;
  padding: 1rem 1.25rem 1.55rem;
  position: fixed;
  bottom: 1rem;
  right: 1rem;
}

.add-button:hover{
  background: rgb(var(--color-primary-900));
}

.small-add-button {
  padding: 0 0.45rem 0.1rem; /* Ugly set of values that keeps button squared*/
}

.home-view-buttons{
  margin: 0.5rem 0 0 0;
}

.toggle-background{
  background: rgb(var(--color-success-600));
}

.suggestions {
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  padding: 0.25rem;
  position: absolute;
  width: calc(100% - 4px); /* Account for borders */
  border-radius: 10px;
  z-index: 10;
  max-height: 200px;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: rgba(var(--color-primary-100) /.8) rgba(var(--color-primary-900));
  margin-top: 2px; /* Small gap between input and suggestions */
}

.small-dialog-suggestions {
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  width: 100%;
  border-radius: 10px;
  max-height: 120px;
  overflow-y: auto;
  padding: 0.25px;
}

/* Webkit (Chrome, Safari, Edge) scrollbar styles */
.suggestions::-webkit-scrollbar {
  width: 8px;
}

.suggestions::-webkit-scrollbar-track {
  background: rgba(var(--color-primary-900));
  border-radius: 10px;
}

.suggestions::-webkit-scrollbar-thumb {
  width: 100%;
  position: absolute;
  z-index: 10;
  background: rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
}

.suggestion-item {
  text-align: left;
  width:100%;
  padding: 0.5rem;
  display: block; /* Ensures consistent spacing */
}

.suggestion-item:hover {
  background: rgba(var(--color-primary-800));
  border-radius: 6px; /* Slight rounding on hover highlight */
}

.dark-textarea { /* Should be used on any/all text input boxes*/
  background: rgba(var(--color-primary-900)/.1);
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
}

.dark-area {
  background: rgba(var(--color-primary-900)/.1);
  color: rgb(var(--theme-font-color-base));
}

.searchbar {
  background: rgba(var(--color-primary-900)/.1);
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
}

.item-image-container {
  width: 100px;
  height: 100px;
  margin: 10px;
  cursor: pointer;
  transition: none;
  display: block;
}

.item-image-container.expanded {
  width: auto;
  height: auto;
  max-width: calc(100% - 20px);
}

select option { /* Select dropdown options */
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  padding: 0.5rem;
}

select option:hover {
  background: rgba(var(--color-primary-800));
}

.item-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 4px;
  transition: none;
}

.item-image-container.expanded .item-image {
  width: 100%;
  height: auto;
  max-width: 500px; /* Hard cap on image width */
  object-fit: contain;
}

.custom-dropdown {
  position: relative;
  display: inline-block;
}

.custom-dropdown select {
  appearance: none;
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  border: 1px solid rgba(var(--color-primary-100) /.8);
  border-radius: 10px;
  padding: 0.5rem 1rem;
  width: 100%;
}

.custom-dropdown select option {
  background: rgba(var(--color-primary-900));
  color: rgb(var(--theme-font-color-base));
  padding: 0.5rem;
}

.custom-dropdown select option:hover {
  background: rgba(var(--color-primary-800));
}

.custom-dropdown::after {
  content: '▼';
  position: absolute;
  top: 60%;
  right: 1rem;
  transform: translateY(-50%);
  pointer-events: none;
  color: rgba(var(--theme-font-color-base)/.8);
}

.custom-dropdown select:disabled {
  background: rgba(var(--color-primary-900)/.4);
  color: rgba(var(--theme-font-color-base)/.6);
  cursor: not-allowed;
}

.action-container {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  z-index: 1000;
}

.action-message {
  background-color: rgba(var(--color-success-600) / 0.9);
  color: rgb(var(--theme-font-color-base));
  padding: 1rem 2rem;
  border-radius: 10px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  text-align: center;
}

.error-message {
  background-color: rgba(var(--color-error-500) / 0.9);
  color: rgb(var(--theme-font-color-base));
  padding: 1rem 2rem;
  border-radius: 10px;
}

.search-controls {
  display: flex;
  gap: 1rem;
}

.sort-container {
  min-width: 8rem;
  max-width: 50%;
}

.exact-search {
  display: flex;
  align-items: center;
  margin: 1.5rem 0 0 0;
  gap: 0.5rem;
}

.view-toggle {
  margin: 1rem;
}

.nav-margin {
  margin: 0rem 1rem;
}

.expand-button {
  margin-right: 0.5rem;
  cursor: pointer;
}

.tree-item-name {
  cursor: pointer;
}

.tree-item-name:hover {
  text-decoration: underline;
}

.no-children {
  display: none;
}

.template {
  display: inline-block;
  width: 25%;
}

.fields {
  width: 70%;
}

.item-view ul {
  list-style-type: none;
  padding-left: 0;
}

.item-subcard {
  max-width:45%;
}

.basis-30 {
  flex-basis: 30%;
}

.dropdown-arrow {
  height: 40px;
  width: 40px;
  
}

/* 
Text styles 
*/
#title{
  color: rgb(var(--theme-font-color-base));
  letter-spacing: -0.1rem;
  transition: color 0.2s ease-in-out;
}

#title:hover{
  color:rgb(var(--color-success-500));
}

#underline-header{
  border-bottom: 1px solid rgba(var(--color-primary-100) /.8);
}

.important-text{ 
  font-size: 1.5rem;
  font-weight: bold;
  letter-spacing: -0.05rem;
  overflow: hidden;
  text-overflow: ellipsis;
}

.sub-text{
  color: rgba(var(--theme-font-color-base)/.8);
  font-weight: lighter;
  overflow: hidden;
  text-overflow: ellipsis;
}

.clickable-text{ /* Links and such */
  color: rgb(var(--color-success-400));
  text-decoration: underline;
}

.clickable-text:hover{
  color: rgb(var(--color-success-500));
  text-decoration: underline;
}

.text-icon {
  font-size: 2.25rem;
}

.text-3xl {
  font-size: 2.5rem;
  line-height: 2rem;
}

.item-chain span {
  white-space: nowrap;
}

.indented {
  padding-left: 2rem;
}

.capitalize {
  text-transform: capitalize;
}

/*
Modifications of built-in tags
*/
div {
  color: rgb(var(--theme-font-color-base));
}

h1 {
  color: rgb(var(--theme-font-color-base));
  padding: 0rem 0rem 1rem 0rem; 
}

h2 {
  color: rgb(var(--theme-font-color-base));
}

body {
  background: rgb(var(--color-surface-800)) !important;
  background-repeat: no-repeat !important;
  background-size: 100% 50rem !important;
  background-image: radial-gradient(at 0% 0%, rgba(var(--color-success-500) / .2) 0px, transparent 55%), 
                    radial-gradient(at 98% 1%, rgba(var(--color-error-500) / .33) 0px, transparent 50%) !important;         
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  padding: 10px 20px 1px;
}

select {
  width: 100%;
}

input[type="file"] { /* File input areas (universal) */
  background: rgba(var(--color-primary-900), 0.8); 
  color: rgb(var(--theme-font-color-base));
  padding: 1rem;
  width: 100%;
  text-align: center;
}

input[type="file"]::file-selector-button {
  background: white;
  color: black;
  border: 1px solid #ccc;
  border-radius: 10px;
  padding: 0.5rem 1rem;
  cursor: pointer;
  margin-right: 1rem;
}

input[type="file"][accept*=".csv"]{ /* File input areas (csv specific) */
  &:empty::before {
    content: "Drop csv files here or ";
  }
}

input[type="file"][accept*="image"]{ /* File input areas (image specific) */
  &:empty::before {
    content: "Drop image file here or ";
  }
}

::backdrop { /* Dialog background */
  background: rgba(var(--color-surface-900) / 0.7);
}
