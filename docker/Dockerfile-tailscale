FROM node:20-bullseye AS build

# Install OS dependencies
RUN apt-get update && apt-get install -y python3 make g++ iputils-ping && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /usr/src/app

# Copy only package.json + package-lock.json to install dependencies first
COPY package*.json ./

# Install all (dev+prod) dependencies
RUN npm ci

COPY . .

# Build
RUN npm run build

# Debug: show what's in dist/ after the build
RUN echo "DEBUG: Listing dist folder..." && ls -l dist

FROM node:20-bullseye AS production

# Install OS dependencies and Tailscale
RUN apt-get update && apt-get install -y python3 make g++ iputils-ping curl gnupg apt-transport-https && \
    curl -fsSL https://pkgs.tailscale.com/stable/debian/bullseye.noarmor.gpg | gpg --dearmor -o /usr/share/keyrings/tailscale-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/tailscale-archive-keyring.gpg] https://pkgs.tailscale.com/stable/debian bullseye main" | tee /etc/apt/sources.list.d/tailscale.list && \
    apt-get update && apt-get install -y tailscale && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /usr/src/app
ENV NODE_ENV=production

# Copy package.json + lock to install only prod dependencies
COPY package*.json ./
RUN npm ci --omit=dev

# Copy over the dist folder from the build stage
COPY --from=build /usr/src/app/dist ./dist

# Copy entrypoint script
COPY docker/entrypoint-tailscale.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE 3000

ENTRYPOINT ["/entrypoint.sh"]
CMD ["node", "dist/index.js"]