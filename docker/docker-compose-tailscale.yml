name: assetatlas-project

services:
  assetatlas:
    image: assetatlas
    volumes:
      - ./.env:/usr/src/app/docker/.env
      - tsbuild-cache:/usr/src/app/.tsbuildcache
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: "1"
      cache_from:
        - assetatlas:latest
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongo:27017/assetatlas_db
      DOCKER_BUILDKIT: "1"
      COMPOSE_DOCKER_CLI_BUILD: "1"
      IP: ${TAILSCALE_IP:-localhost:3000}
    ports:
      - "3000:3000"
    networks:
      - default
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - default
    healthcheck: 
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/tcp
      interval: 2s
      timeout: 5s
      retries: 3

  auto-migration:
    extends:
      file: ./common-services.yml
      service: auto-migration
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - default

  tailscale:
    image: tailscale/tailscale:stable
    container_name: tailscale
    hostname: assetAtlas-ts
    environment:
      - TS_AUTHKEY=${TS_AUTH_KEY}
      - TS_USERSPACE=true
    volumes:
      - /dev/net/tun
      - tailscale-state:/var/lib/tailscale
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: unless-stopped
    network_mode: host

volumes:
  mongo-data:
  tsbuild-cache:
    name: assetatlas-tsbuild-cache
  tailscale-state:

networks:
  default:
    driver: bridge
    name: assetatlas-bridge